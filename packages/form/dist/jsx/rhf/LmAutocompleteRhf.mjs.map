{
  "version": 3,
  "sources": ["../../../src/rhf/LmAutocompleteRhf.tsx"],
  "sourcesContent": ["import { Controller, FieldValues } from 'react-hook-form'\nimport { LmRhfProps } from './lmRhfProps'\nimport { LmAutocomplete, LmAutocompleteProps } from '../LmAutocomplete'\n\nexport type LmAutocompleteRhfProps<T extends FieldValues> = LmRhfProps<T> &\n  LmAutocompleteProps & {\n    matchId?: boolean\n  }\n\nexport function LmAutocompleteRhf<T extends FieldValues = FieldValues>({\n  name,\n  rules,\n  control,\n  defaultValue,\n  matchId,\n  options,\n  multiple,\n  ...inputProps\n}: LmAutocompleteRhfProps<T>) {\n  return (\n    <Controller\n      name={name}\n      rules={rules}\n      control={control}\n      defaultValue={defaultValue}\n      render={({ field: { onChange, value }, fieldState: { error } }) => {\n        let currentValue = multiple ? value || [] : value || null\n        if (matchId) {\n          // @ts-ignore\n          currentValue = multiple\n            ? (value || []).map((i: any) => options.find((j) => (j.value || j) === i))\n            : options.find((i) => (i.value || i) === value) || null\n        }\n\n        return (\n          <LmAutocomplete\n            {...inputProps}\n            value={currentValue}\n            multiple={multiple}\n            options={options}\n            error={!!error}\n            onChange={(v) => {\n              let changedVal = v\n              if (matchId) {\n                // @ts-ignore\n                changedVal = Array.isArray(v) ? v.map((i: any) => i?.value || i) : v?.value || v\n              }\n              onChange(changedVal)\n              if (typeof inputProps.onChange === 'function') {\n                inputProps.onChange(v)\n              }\n            }}\n            helperText={error ? error.message : inputProps.helperText}\n          />\n        )\n      }}\n    />\n  )\n}\n"],
  "mappings": "AAAA,SAAS,kBAA+B;AAExC,SAAS,sBAA2C;AAO7C,SAAS,kBAAuD;AAAA,EACrE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,KACG;AACL,GAA8B;AAC5B,SACE,CAAC,WACC,MAAM,MACN,OAAO,OACP,SAAS,SACT,cAAc,cACd,QAAQ,CAAC,EAAE,OAAO,EAAE,UAAU,MAAM,GAAG,YAAY,EAAE,MAAM,EAAE,MAAM;AACjE,QAAI,eAAe,WAAW,SAAS,CAAC,IAAI,SAAS;AACrD,QAAI,SAAS;AAEX,qBAAe,YACV,SAAS,CAAC,GAAG,IAAI,CAAC,MAAW,QAAQ,KAAK,CAAC,OAAO,EAAE,SAAS,OAAO,CAAC,CAAC,IACvE,QAAQ,KAAK,CAAC,OAAO,EAAE,SAAS,OAAO,KAAK,KAAK;AAAA,IACvD;AAEA,WACE,CAAC,mBACK,YACJ,OAAO,cACP,UAAU,UACV,SAAS,SACT,OAAO,CAAC,CAAC,OACT,UAAU,CAAC,MAAM;AACf,UAAI,aAAa;AACjB,UAAI,SAAS;AAEX,qBAAa,MAAM,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,MAAW,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS;AAAA,MACjF;AACA,eAAS,UAAU;AACnB,UAAI,OAAO,WAAW,aAAa,YAAY;AAC7C,mBAAW,SAAS,CAAC;AAAA,MACvB;AAAA,IACF,GACA,YAAY,QAAQ,MAAM,UAAU,WAAW,YACjD;AAAA,EAEJ,GACF;AAEJ;",
  "names": []
}
