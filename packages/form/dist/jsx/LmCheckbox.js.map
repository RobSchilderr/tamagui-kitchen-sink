{
  "version": 3,
  "sources": ["../../src/LmCheckbox.tsx"],
  "sourcesContent": ["import { ReactNode, useId } from 'react'\nimport {\n  Checkbox,\n  FontSizeTokens,\n  Label,\n  Paragraph,\n  ParagraphProps,\n  SizeTokens,\n  XStack,\n  XStackProps,\n  YStack,\n} from 'tamagui'\nimport { Check } from 'tamagui-phosphor-icons'\n\nexport type LmCheckboxProps = XStackProps & {\n  label?: ReactNode\n  onChange?: (bool: boolean) => void\n  value?: boolean\n  error?: boolean\n  helperText?: ReactNode\n  helperTextProps?: ParagraphProps\n  size?: SizeTokens\n  required?: boolean\n}\n\nexport function LmCheckbox({\n  label,\n  onChange,\n  error,\n  helperText,\n  size = '$3',\n  value,\n  required,\n  theme,\n  helperTextProps,\n  ...stackProps\n}: LmCheckboxProps) {\n  const id = useId()\n  return (\n    <XStack space alignItems={'center'} {...stackProps}>\n      <Checkbox\n        id={id}\n        theme={error ? 'red' : theme}\n        size={size}\n        defaultChecked={value}\n        onCheckedChange={(checked) => {\n          if (typeof onChange === 'function') {\n            onChange(!!checked)\n          }\n        }}\n        borderColor={error ? '$red8' : '$borderColor'}\n      >\n        <Checkbox.Indicator>\n          <Check />\n        </Checkbox.Indicator>\n      </Checkbox>\n      {label && (\n        <YStack>\n          <Label size={size} htmlFor={id}>\n            {required ? '* ' : ''}\n            {label}\n          </Label>\n          {helperText && (\n            <Paragraph\n              paddingLeft={'$2'}\n              marginTop={0}\n              size={size as FontSizeTokens}\n              {...helperTextProps}\n              color={error ? '$red10' : helperTextProps?.color}\n            >\n              {helperText}\n            </Paragraph>\n          )}\n        </YStack>\n      )}\n    </XStack>\n  )\n}\n"],
  "mappings": "AAAA,SAAoB,aAAa;AACjC;AAAA,EACE;AAAA,EAEA;AAAA,EACA;AAAA,EAGA;AAAA,EAEA;AAAA,OACK;AACP,SAAS,aAAa;AAaf,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAoB;AAClB,QAAM,KAAK,MAAM;AACjB,SACE,CAAC,OAAO,MAAM,WAAY,aAAc;AAAA,IACtC,CAAC;AAAA,MACC,IAAI;AAAA,MACJ,OAAO,QAAQ,QAAQ;AAAA,MACvB,MAAM;AAAA,MACN,gBAAgB;AAAA,MAChB,iBAAiB,CAAC,YAAY;AAC5B,YAAI,OAAO,aAAa,YAAY;AAClC,mBAAS,CAAC,CAAC,OAAO;AAAA,QACpB;AAAA,MACF;AAAA,MACA,aAAa,QAAQ,UAAU;AAAA,KAE/B,CAAC,SAAS,UACR,CAAC,MAAM,EACT,EAFC,SAAS,UAGZ,EAfC;AAAA,KAgBA,SACC,CAAC;AAAA,MACC,CAAC,MAAM,MAAM,MAAM,SAAS;AAAA,SACzB,WAAW,OAAO;AAAA,SAClB;AAAA,MACH,EAHC;AAAA,OAIA,cACC,CAAC;AAAA,QACC,YAAa;AAAA,QACb,WAAW;AAAA,QACX,MAAM;AAAA,YACF;AAAA,QACJ,OAAO,QAAQ,WAAW,iBAAiB;AAAA,QAE1C,WACH,EARC;AAAA,IAUL,EAhBC;AAAA,EAkBL,EApCC;AAsCL;",
  "names": []
}
