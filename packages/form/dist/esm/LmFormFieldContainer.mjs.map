{
  "version": 3,
  "sources": ["../../src/LmFormFieldContainer.tsx"],
  "sourcesContent": ["import {\n  FontSizeTokens,\n  Label,\n  Paragraph,\n  SizeTokens,\n  styled,\n  ThemeableStack,\n  ThemeableStackProps,\n  YStack,\n} from 'tamagui'\nimport { LmFormContainerBaseTypes } from './formContainerTypes'\n\ntype LmFormContainerProps = ThemeableStackProps &\n  LmFormContainerBaseTypes & {\n    id?: string\n    size?: SizeTokens\n    fullWidth?: boolean\n  }\n\nconst StackContainer = styled(ThemeableStack, {\n  variants: {\n    fullWidth: {\n      true: {\n        width: '100%',\n      },\n    },\n    labelInline: {\n      true: {\n        flexDirection: 'row',\n        space: true,\n        alignItems: 'center',\n      },\n    },\n  } as const,\n})\n\nexport function LmFormFieldContainer({\n  label,\n  children,\n  helperText,\n  id,\n  size,\n  labelProps,\n  required,\n  error,\n  helperTextProps,\n  ...rest\n}: LmFormContainerProps) {\n  return (\n    <StackContainer space={!!rest.labelInline} {...rest}>\n      {label && (\n        <Label\n          htmlFor={id}\n          size={size || '$3'}\n          {...labelProps}\n          color={error ? '$red10' : undefined}\n          width={rest.labelInline ? 150 : undefined}\n          justifyContent={rest.labelInline ? 'flex-end' : undefined}\n        >\n          {label} {required && ` *`}\n        </Label>\n      )}\n      <YStack>\n        {children}\n        {helperText && (\n          <Paragraph\n            paddingLeft={'$2'}\n            marginTop={'$2'}\n            size={size as FontSizeTokens}\n            {...helperTextProps}\n            color={error ? '$red10' : undefined}\n          >\n            {helperText}\n          </Paragraph>\n        )}\n      </YStack>\n    </StackContainer>\n  )\n}\n"],
  "mappings": "AAmDQ,SAcE,KAdF;AAnDR;AAAA,EAEE;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,OACK;AAUP,MAAM,iBAAiB,OAAO,gBAAgB;AAAA,EAC5C,UAAU;AAAA,IACR,WAAW;AAAA,MACT,MAAM;AAAA,QACJ,OAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,QACJ,eAAe;AAAA,QACf,OAAO;AAAA,QACP,YAAY;AAAA,MACd;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAEM,SAAS,qBAAqB;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAyB;AACvB,SACE,qBAAC,kBAAe,OAAO,CAAC,CAAC,KAAK,aAAc,GAAG,MAC5C;AAAA,aACC;AAAA,MAAC;AAAA;AAAA,QACC,SAAS;AAAA,QACT,MAAM,QAAQ;AAAA,QACb,GAAG;AAAA,QACJ,OAAO,QAAQ,WAAW;AAAA,QAC1B,OAAO,KAAK,cAAc,MAAM;AAAA,QAChC,gBAAgB,KAAK,cAAc,aAAa;AAAA,QAE/C;AAAA;AAAA,UAAM;AAAA,UAAE,YAAY;AAAA;AAAA;AAAA,IACvB;AAAA,IAEF,qBAAC,UACE;AAAA;AAAA,MACA,cACC;AAAA,QAAC;AAAA;AAAA,UACC,aAAa;AAAA,UACb,WAAW;AAAA,UACX;AAAA,UACC,GAAG;AAAA,UACJ,OAAO,QAAQ,WAAW;AAAA,UAEzB;AAAA;AAAA,MACH;AAAA,OAEJ;AAAA,KACF;AAEJ;",
  "names": []
}
