{
  "version": 3,
  "sources": ["../../src/LmCheckbox.tsx"],
  "sourcesContent": ["import { ReactNode, useId } from 'react'\nimport {\n  Checkbox,\n  FontSizeTokens,\n  Label,\n  Paragraph,\n  ParagraphProps,\n  SizeTokens,\n  XStack,\n  XStackProps,\n  YStack,\n} from 'tamagui'\nimport { Check } from 'tamagui-phosphor-icons'\n\nexport type LmCheckboxProps = XStackProps & {\n  label?: ReactNode\n  onChange?: (bool: boolean) => void\n  value?: boolean\n  error?: boolean\n  helperText?: ReactNode\n  helperTextProps?: ParagraphProps\n  size?: SizeTokens\n  required?: boolean\n}\n\nexport function LmCheckbox({\n  label,\n  onChange,\n  error,\n  helperText,\n  size = '$3',\n  value,\n  required,\n  theme,\n  helperTextProps,\n  ...stackProps\n}: LmCheckboxProps) {\n  const id = useId()\n  return (\n    <XStack space alignItems={'center'} {...stackProps}>\n      <Checkbox\n        id={id}\n        theme={error ? 'red' : theme}\n        size={size}\n        defaultChecked={value}\n        onCheckedChange={(checked) => {\n          if (typeof onChange === 'function') {\n            onChange(!!checked)\n          }\n        }}\n        borderColor={error ? '$red8' : '$borderColor'}\n      >\n        <Checkbox.Indicator>\n          <Check />\n        </Checkbox.Indicator>\n      </Checkbox>\n      {label && (\n        <YStack>\n          <Label size={size} htmlFor={id}>\n            {required ? '* ' : ''}\n            {label}\n          </Label>\n          {helperText && (\n            <Paragraph\n              paddingLeft={'$2'}\n              marginTop={0}\n              size={size as FontSizeTokens}\n              {...helperTextProps}\n              color={error ? '$red10' : helperTextProps?.color}\n            >\n              {helperText}\n            </Paragraph>\n          )}\n        </YStack>\n      )}\n    </XStack>\n  )\n}\n"],
  "mappings": "AAqDU,cAKA,YALA;AArDV,SAAoB,aAAa;AACjC;AAAA,EACE;AAAA,EAEA;AAAA,EACA;AAAA,EAGA;AAAA,EAEA;AAAA,OACK;AACP,SAAS,aAAa;AAaf,SAAS,WAAW;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAoB;AAClB,QAAM,KAAK,MAAM;AACjB,SACE,qBAAC,UAAO,OAAK,MAAC,YAAY,UAAW,GAAG,YACtC;AAAA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,OAAO,QAAQ,QAAQ;AAAA,QACvB;AAAA,QACA,gBAAgB;AAAA,QAChB,iBAAiB,CAAC,YAAY;AAC5B,cAAI,OAAO,aAAa,YAAY;AAClC,qBAAS,CAAC,CAAC,OAAO;AAAA,UACpB;AAAA,QACF;AAAA,QACA,aAAa,QAAQ,UAAU;AAAA,QAE/B,8BAAC,SAAS,WAAT,EACC,8BAAC,SAAM,GACT;AAAA;AAAA,IACF;AAAA,IACC,SACC,qBAAC,UACC;AAAA,2BAAC,SAAM,MAAY,SAAS,IACzB;AAAA,mBAAW,OAAO;AAAA,QAClB;AAAA,SACH;AAAA,MACC,cACC;AAAA,QAAC;AAAA;AAAA,UACC,aAAa;AAAA,UACb,WAAW;AAAA,UACX;AAAA,UACC,GAAG;AAAA,UACJ,OAAO,QAAQ,WAAW,mDAAiB;AAAA,UAE1C;AAAA;AAAA,MACH;AAAA,OAEJ;AAAA,KAEJ;AAEJ;",
  "names": []
}
