{
  "version": 3,
  "sources": ["../../../src/rhf/LmSliderRhf.tsx"],
  "sourcesContent": ["import { LmRhfProps } from './lmRhfProps'\nimport { LmSlider, LmSliderProps } from '../LmSlider'\nimport { Controller, FieldValues } from 'react-hook-form'\n\nexport type LmSliderRhfProps<T extends FieldValues> = LmSliderProps & LmRhfProps<T> & {}\n\nexport function LmSliderRhf<T extends FieldValues>({\n  name,\n  control,\n  rules = {},\n  defaultValue,\n  ...sliderProps\n}: LmSliderRhfProps<T>) {\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={rules}\n      render={({ field: { value, onChange }, fieldState, formState }) => {\n        const preparedValue = Array.isArray(value) ? value : [value]\n        return (\n          <LmSlider\n            {...sliderProps}\n            defaultValue={preparedValue}\n            onValueChange={(v) => {\n              if (v.length === 1) {\n                onChange(v[0])\n              } else {\n                onChange(v)\n              }\n              if (typeof sliderProps.onValueChange === 'function') {\n                sliderProps.onValueChange(v)\n              }\n            }}\n          />\n        )\n      }}\n    />\n  )\n}\n"],
  "mappings": "AAqBU;AApBV,SAAS,gBAA+B;AACxC,SAAS,kBAA+B;AAIjC,SAAS,YAAmC;AAAA,EACjD;AAAA,EACA;AAAA,EACA,QAAQ,CAAC;AAAA,EACT;AAAA,EACA,GAAG;AACL,GAAwB;AACtB,SACE;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ,CAAC,EAAE,OAAO,EAAE,OAAO,SAAS,GAAG,YAAY,UAAU,MAAM;AACjE,cAAM,gBAAgB,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAC3D,eACE;AAAA,UAAC;AAAA;AAAA,YACE,GAAG;AAAA,YACJ,cAAc;AAAA,YACd,eAAe,CAAC,MAAM;AACpB,kBAAI,EAAE,WAAW,GAAG;AAClB,yBAAS,EAAE,CAAC,CAAC;AAAA,cACf,OAAO;AACL,yBAAS,CAAC;AAAA,cACZ;AACA,kBAAI,OAAO,YAAY,kBAAkB,YAAY;AACnD,4BAAY,cAAc,CAAC;AAAA,cAC7B;AAAA,YACF;AAAA;AAAA,QACF;AAAA,MAEJ;AAAA;AAAA,EACF;AAEJ;",
  "names": []
}
