{
  "version": 3,
  "sources": ["../../src/LmSlider.tsx"],
  "sourcesContent": ["import { ColorTokens, Slider, SliderProps, SliderThumbProps, styled, Text, XStack } from 'tamagui'\nimport { useId, useState } from 'react'\nimport { LmFormFieldContainer } from './LmFormFieldContainer'\nimport { LmFormContainerBaseTypes } from './formContainerTypes'\n\nconst CustomSliderTrack = styled(Slider.Track, {\n  variants: {\n    colorCustom: {\n      ':string': (color) => {\n        return {\n          backgroundColor: color,\n        }\n      },\n    },\n  } as const,\n})\nconst CustomSliderTrackActive = styled(Slider.TrackActive, {\n  variants: {\n    colorCustom: {\n      ':string': (color: string) => {\n        return {\n          backgroundColor: color,\n        }\n      },\n    },\n  } as const,\n})\n\nexport type LmSliderProps = SliderProps &\n  LmFormContainerBaseTypes & {\n    defaultValue?: number[]\n    color?: ColorTokens | string\n    colorActiveOnly?: boolean\n    thumbProps?: SliderThumbProps\n    showValue?: boolean\n  }\n\nexport function LmSlider({\n  thumbProps,\n  color,\n  defaultValue = [0],\n  label,\n  labelProps,\n  error,\n  required,\n  helperText,\n  helperTextProps,\n  labelInline,\n  colorActiveOnly,\n  showValue,\n  ...sliderProps\n}: LmSliderProps) {\n  const id = useId()\n  const [value, setValue] = useState<number[]>(defaultValue)\n  const trackColor = color ? `${color}Dark` : undefined\n  return (\n    <LmFormFieldContainer\n      id={id}\n      label={label}\n      error={error}\n      required={required}\n      labelProps={labelProps}\n      size={sliderProps.size}\n      labelInline={labelInline}\n      helperText={helperText}\n      helperTextProps={helperTextProps}\n      alignItems={labelInline ? 'center' : undefined}\n    >\n      <XStack space alignItems={'center'}>\n        <Slider\n          size=\"$2\"\n          width={150}\n          defaultValue={value}\n          max={5}\n          step={1}\n          {...sliderProps}\n          onValueChange={(v) => {\n            setValue(v)\n            if (typeof sliderProps.onValueChange === 'function') {\n              sliderProps.onValueChange(v)\n            }\n          }}\n        >\n          <CustomSliderTrack colorCustom={!colorActiveOnly ? trackColor : undefined}>\n            <CustomSliderTrackActive colorCustom={trackColor} />\n          </CustomSliderTrack>\n          <Slider.Thumb\n            bordered={false}\n            circular\n            pressTheme={false}\n            hoverTheme={false}\n            focusTheme={false}\n            size={'$2'}\n            index={0}\n            backgroundColor={color}\n            {...thumbProps}\n          />\n        </Slider>\n        {showValue && <Text>{value[0]}</Text>}\n      </XStack>\n    </LmFormFieldContainer>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAyF;AACzF,mBAAgC;AAChC,kCAAqC;AAGrC,MAAM,wBAAoB,uBAAO,sBAAO,OAAO;AAAA,EAC7C,UAAU;AAAA,IACR,aAAa;AAAA,MACX,WAAW,CAAC,UAAU;AACpB,eAAO;AAAA,UACL,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AACD,MAAM,8BAA0B,uBAAO,sBAAO,aAAa;AAAA,EACzD,UAAU;AAAA,IACR,aAAa;AAAA,MACX,WAAW,CAAC,UAAkB;AAC5B,eAAO;AAAA,UACL,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAWM,SAAS,SAAS;AAAA,EACvB;AAAA,EACA;AAAA,EACA,eAAe,CAAC,CAAC;AAAA,EACjB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,KACG;AACL,GAAkB;AAChB,QAAM,SAAK,oBAAM;AACjB,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAmB,YAAY;AACzD,QAAM,aAAa,QAAQ,GAAG,cAAc;AAC5C,SACE,CAAC,iDACC,IAAI,IACJ,OAAO,OACP,OAAO,OACP,UAAU,UACV,YAAY,YACZ,MAAM,YAAY,MAClB,aAAa,aACb,YAAY,YACZ,iBAAiB,iBACjB,YAAY,cAAc,WAAW,QAErC,CAAC,sBAAO,MAAM,WAAY;AAAA,IACxB,CAAC,sBACC,KAAK,KACL,OAAO,KACP,cAAc,OACd,KAAK,GACL,MAAM,OACF,aACJ,eAAe,CAAC,MAAM;AACpB,eAAS,CAAC;AACV,UAAI,OAAO,YAAY,kBAAkB,YAAY;AACnD,oBAAY,cAAc,CAAC;AAAA,MAC7B;AAAA,IACF;AAAA,MAEA,CAAC,kBAAkB,aAAa,CAAC,kBAAkB,aAAa,QAC9D,CAAC,wBAAwB,aAAa,YAAY,EACpD,EAFC;AAAA,MAGD,CAAC,sBAAO,MACN,UAAU,OACV,SACA,YAAY,OACZ,YAAY,OACZ,YAAY,OACZ,KAAM,KACN,OAAO,GACP,iBAAiB,WACb,YACN;AAAA,IACF,EA5BC;AAAA,KA6BA,aAAa,CAAC,qBAAM,MAAM,GAAG,EAAf;AAAA,EACjB,EA/BC,sBAgCH,EA5CC;AA8CL;",
  "names": []
}
