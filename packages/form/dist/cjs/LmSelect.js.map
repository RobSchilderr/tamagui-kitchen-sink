{
  "version": 3,
  "sources": ["../../src/LmSelect.tsx"],
  "sourcesContent": ["import { Select, SelectProps, ThemeProps, YStack } from 'tamagui'\nimport { LinearGradient } from '@tamagui/linear-gradient'\nimport { colormap, ThemeColors } from '@tamagui-extras/core'\nimport { CaretDown, CaretUp, Check } from 'tamagui-phosphor-icons'\nimport { useId, useState } from 'react'\nimport { LmFormFieldContainer } from './LmFormFieldContainer'\nimport { LmFormContainerBaseTypes } from './formContainerTypes'\n\ntype GetAltThemeNames<S> = (S extends `${string}_${infer Alt}` ? GetAltThemeNames<Alt> : S) | S\n\nexport type LmSelectProps = SelectProps &\n  LmFormContainerBaseTypes & {\n    value?: string\n    options: { label: string; value: string | number }[]\n    colorVariant?: ThemeColors\n    themeName?: ThemeProps['name']\n    width?: number | string\n    placeholder?: string\n    dropDownLabel?: string // above the items list\n    fullWidth?: boolean\n  }\n\nexport function LmSelect({\n  value,\n  colorVariant,\n  themeName,\n  options = [],\n  width = 180,\n  placeholder = '',\n  dropDownLabel,\n  required,\n  error,\n  helperText,\n  helperTextProps,\n  label,\n  labelInline,\n  labelProps,\n  fullWidth,\n  defaultValue,\n  onValueChange,\n  ...rest\n}: LmSelectProps) {\n  const [selectVal, setSelectVal] = useState<string>(value ?? defaultValue ?? '')\n  const id = useId()\n  rest.size = rest.size || '$3'\n\n  return (\n    <LmFormFieldContainer\n      id={id}\n      theme={colorVariant ? (colormap[colorVariant] as any) : themeName || undefined}\n      error={error}\n      required={required}\n      labelProps={labelProps}\n      label={label}\n      size={rest.size}\n      fullWidth={fullWidth}\n      labelInline={labelInline}\n      helperText={helperText}\n      helperTextProps={helperTextProps}\n    >\n      <Select\n        id={id}\n        {...rest}\n        value={selectVal}\n        onValueChange={(val) => {\n          setSelectVal(val)\n          if (typeof onValueChange === 'function') {\n            onValueChange(val)\n          }\n        }}\n      >\n        <Select.Trigger\n          width={fullWidth ? '100%' : width}\n          iconAfter={<CaretDown />}\n          paddingVertical={0}\n          minHeight={rest.size}\n        >\n          <Select.Value placeholder={placeholder} paddingVertical={0} />\n        </Select.Trigger>\n        {/*@ts-ignore*/}\n        <Select.Adapt when=\"sm\">\n          <Select.Sheet modal dismissOnSnapToBottom>\n            <Select.Sheet.Frame>\n              <Select.Sheet.ScrollView>\n                <Select.Adapt.Contents />\n              </Select.Sheet.ScrollView>\n            </Select.Sheet.Frame>\n            <Select.Sheet.Overlay />\n          </Select.Sheet>\n        </Select.Adapt>\n\n        <Select.Content zIndex={200000}>\n          <Select.ScrollUpButton\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            position=\"relative\"\n            width=\"100%\"\n            height=\"$3\"\n          >\n            <YStack zIndex={10}>\n              <CaretUp size={20} />\n            </YStack>\n            <LinearGradient\n              start={[0, 0]}\n              end={[0, 1]}\n              fullscreen\n              colors={['$background', '$backgroundTransparent']}\n              borderRadius=\"$4\"\n            />\n          </Select.ScrollUpButton>\n\n          <Select.Viewport>\n            <Select.Group>\n              {dropDownLabel && <Select.Label>{dropDownLabel}</Select.Label>}\n              {options.map((item, i) => (\n                <Select.Item index={i} key={item.value} value={`${item.value}`}>\n                  <Select.ItemText>{item.label}</Select.ItemText>\n                  <Select.ItemIndicator marginLeft=\"auto\">\n                    <Check size={16} />\n                  </Select.ItemIndicator>\n                </Select.Item>\n              ))}\n            </Select.Group>\n          </Select.Viewport>\n\n          <Select.ScrollDownButton\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            position=\"relative\"\n            width=\"100%\"\n            height=\"$3\"\n          >\n            <YStack zIndex={10}>\n              <CaretDown size={20} />\n            </YStack>\n            <LinearGradient\n              start={[0, 0]}\n              end={[0, 1]}\n              fullscreen\n              colors={['$backgroundTransparent', '$background']}\n              borderRadius=\"$4\"\n            />\n          </Select.ScrollDownButton>\n        </Select.Content>\n      </Select>\n    </LmFormFieldContainer>\n  )\n}\n"],
  "mappings": "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",
  "names": []
}
